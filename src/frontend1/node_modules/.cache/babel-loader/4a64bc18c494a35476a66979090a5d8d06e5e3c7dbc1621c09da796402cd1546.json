{"ast":null,"code":"var _jsxFileName = \"D:\\\\Testing\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\CyberT\\\\Code\\\\registrationform\\\\src\\\\frontend\\\\src\\\\testi.js\",\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport GetUsersItem from \"./components/GetUsersItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [GettedUsers, setGettedUsers] = useState([]);\n  function GetUsers() {\n    _s();\n    useEffect(() => {\n      fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(result => {\n        console.log(result);\n        setIsLoaded(true);\n        setGettedUsers(result);\n      },\n      // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\n      // чтобы не перехватывать исключения из ошибок в самих компонентах.\n      error => {\n        setIsLoaded(true);\n        setError(error);\n      });\n    }, []);\n    console.log(GettedUsers);\n    return GettedUsers;\n  }\n  _s(GetUsers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  GetUsers();\n\n  // const [userItems, setUserItems] = useState([\n  //     {id: 1, name: 'Nazir', email: 'nazik@nosex.ru', phone: '78076002213', password: 'genshinimba2010'},\n  //     {id: 2, name: 'MEV', email: 'Mevbx@sigma.ru', phone: '7**********', password: '************'},\n  // ])\n\n  const [userItems, setUserItems] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: userItems.map(item => /*#__PURE__*/_jsxDEV(GetUsersItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s2(Test, \"/60XdLoGNYsUYLFYKlszjv2X36w=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useEffect","GetUsersItem","jsxDEV","_jsxDEV","Test","_s2","_s","$RefreshSig$","error","setError","isLoaded","setIsLoaded","GettedUsers","setGettedUsers","GetUsers","fetch","then","response","json","result","console","log","userItems","setUserItems","className","children","map","item","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Testing/Проекты/CyberT/Code/registrationform/src/frontend/src/testi.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport GetUsersItem from \"./components/GetUsersItem\";\r\n\r\nfunction Test() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [GettedUsers, setGettedUsers] = useState([]);\r\n    \r\n    function GetUsers() {\r\n\r\n    \r\n        useEffect(() => {\r\n            fetch('https://jsonplaceholder.typicode.com/posts')\r\n                .then(response => response.json())\r\n                .then(\r\n                    (result) => {\r\n                        console.log(result)\r\n                        setIsLoaded(true);\r\n                        setGettedUsers(result);\r\n                    },\r\n                    // Примечание: важно обрабатывать ошибки именно здесь, а не в блоке catch(),\r\n                    // чтобы не перехватывать исключения из ошибок в самих компонентах.\r\n                    (error) => {\r\n                        setIsLoaded(true);\r\n                        setError(error);\r\n                    }\r\n                )\r\n        }, [])\r\n        console.log(GettedUsers)\r\n        return GettedUsers;\r\n    }\r\n    GetUsers();\r\n\r\n\r\n    // const [userItems, setUserItems] = useState([\r\n    //     {id: 1, name: 'Nazir', email: 'nazik@nosex.ru', phone: '78076002213', password: 'genshinimba2010'},\r\n    //     {id: 2, name: 'MEV', email: 'Mevbx@sigma.ru', phone: '7**********', password: '************'},\r\n    // ])\r\n\r\n    const [userItems, setUserItems] = useState([])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {userItems.map(item =>\r\n                <GetUsersItem item={item} key={item.id} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,IAAIA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,SAASe,QAAQA,CAAA,EAAG;IAAAR,EAAA;IAGhBN,SAAS,CAAC,MAAM;MACZe,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CACAG,MAAM,IAAK;QACRC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;QACnBR,WAAW,CAAC,IAAI,CAAC;QACjBE,cAAc,CAACM,MAAM,CAAC;MAC1B,CAAC;MACD;MACA;MACCX,KAAK,IAAK;QACPG,WAAW,CAAC,IAAI,CAAC;QACjBF,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC,CACJ;IACT,CAAC,EAAE,EAAE,CAAC;IACNY,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;IACxB,OAAOA,WAAW;EACtB;EAACN,EAAA,CAtBQQ,QAAQ;EAuBjBA,QAAQ,EAAE;;EAGV;EACA;EACA;EACA;;EAEA,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAI9C,oBACII,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACfH,SAAS,CAACI,GAAG,CAACC,IAAI,iBACfxB,OAAA,CAACF,YAAY;MAAC0B,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC7C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEd;AAAC3B,GAAA,CAhDQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAkDb,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}