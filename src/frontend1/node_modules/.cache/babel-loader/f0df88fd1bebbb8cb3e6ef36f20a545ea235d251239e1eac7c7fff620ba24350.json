{"ast":null,"code":"var _jsxFileName = \"D:\\\\Testing\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\CyberT\\\\Code\\\\registrationform\\\\src\\\\frontend\\\\src\\\\users.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Users() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Users\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page_events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page_events2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"back_btn\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"index.html\",\n        class: \"back_btn_link\",\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      class: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      class: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"conteiner users_conteiner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n// const url = 'https://jsonplaceholder.typicode.com/posts'; //testURL\n// const htmlBody = document.querySelector('.users_body');\n// const htmlContainer = document.querySelector('.users_conteiner');\n\n// const usersContainer = ReactDOM.createRoot(\n//     document.querySelector('.users_conteiner')\n// )\n\n// const pageEventsDiv = ReactDOM.createRoot(\n//     document.querySelector('.page_events')\n// )\n\n// const pageEventsDiv2 = ReactDOM.createRoot(\n//     document.querySelector('.page_events2')\n// )\n\n// class UserItemCreator extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.pageBlockerOn = this.pageBlockerOn.bind(this);\n//         this.pageBlockerOff = this.pageBlockerOff.bind(this);\n//         this.openUpdateWindow = this.openUpdateWindow.bind(this);\n//         this.deleteUser = this.deleteUser.bind(this);\n//         this.closeUpdateWindow = this.closeUpdateWindow.bind(this);\n//         this.confirmUpdate = this.confirmUpdate.bind(this);\n\n//         this.state = { pageBlockerState: false };\n//     }\n\n//     pageBlockerOn() {\n//         this.setState({ pageBlockerState: true })\n//         const pageBlock = <div className=\"page_blocker\"></div>;\n//         pageEventsDiv2.render(pageBlock);\n//     };\n\n//     pageBlockerOff() {\n//         this.setState({ pageBlockerState: false });\n//         pageEventsDiv2.render(null);\n\n//     };\n\n//     confirmUpdate() {\n//         user = {\n//             id: this.props.id,\n//             name: document.getElementById(\"name\").value,\n//             email: document.getElementById(\"email\").value,\n//             phone: document.getElementById(\"phone\").value,\n//             password: document.getElementById(\"password\").value\n//         }\n\n//         const requestOptions = {\n//             method: 'PUT',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify(user)\n//         }\n\n//         fetch(PUTUserUrl + this.props.id, requestOptions);\n\n//         this.closeUpdateWindow();\n//     }\n\n//     closeUpdateWindow() {\n//         this.pageBlockerOff();\n//         pageEventsDiv.render(null);\n//     };\n\n//     openUpdateWindow() {\n//         this.pageBlockerOn();\n\n//         const editorWindow = <div className=\"editor_window flex\">\n//             <a className=\"editor_window_close\" onClick={this.closeUpdateWindow} tabIndex=\"1\"><svg width=\"25px\" height=\"25px\" viewBox=\"0 0 1024 1024\"\n//                 xmlns=\"http://www.w3.org/2000/svg\">\n//                 <path\n//                     d=\"M195.2 195.2a64 64 0 0 1 90.496 0L512 421.504 738.304 195.2a64 64 0 0 1 90.496 90.496L602.496 512 828.8 738.304a64 64 0 0 1-90.496 90.496L512 602.496 285.696 828.8a64 64 0 0 1-90.496-90.496L421.504 512 195.2 285.696a64 64 0 0 1 0-90.496z\" />\n//             </svg></a>\n//             <h2 className=\"editor_window_title\">Редактирование</h2>\n//             <div className=\"editor_window_place_div\">\n//                 <div>\n//                     <span className=\"editor_window_label\">id</span>\n//                     <input type=\"text\" id=\"id\" value={this.props.id} className=\"form_place editor_window_place--non-active\" readOnly></input>\n//                 </div>\n//                 <div>\n//                     <span className=\"editor_window_label\">name</span>\n//                     <input type=\"text\" id=\"name\" defaultValue={this.props.name} className=\"form_place editor_window_place\"></input>\n//                 </div>\n//                 <div>\n//                     <span className=\"editor_window_label\">email</span>\n//                     <input type=\"text\" id=\"email\" defaultValue={this.props.email} className=\"form_place editor_window_place\"></input>\n//                 </div>\n//                 <div>\n//                     <span className=\"editor_window_label\">phone</span>\n//                     <input type=\"text\" id=\"phone\" defaultValue={this.props.phone} className=\"form_place editor_window_place\"></input>\n//                 </div>\n//                 <div>\n//                     <span className=\"editor_window_label\">password</span>\n//                     <input type=\"text\" id=\"password\" defaultValue={this.props.password} className=\"form_place editor_window_place\"></input>\n//                 </div>\n//             </div>\n//             <button onClick={this.confirmUpdate} className=\"editor_window_submit\">Принять</button>\n//         </div>\n\n//         pageEventsDiv.render(editorWindow);\n\n//     };\n\n//     deleteUser() {\n//         fetch((DELETEUserUrl + this.props.id), {\n//             method: 'DELETE'\n//         });\n//         document.querySelector('.users_conteiner').removeChild(document.querySelector('.user_item'));\n//     };\n\n//     render() {\n//         return <div className=\"user_item flex\" userid={this.props.id}>\n//             <div className=\"user_item_info flex\">\n//                 <div className=\"item_info_userId\"><mark>id: </mark>{this.props.id}</div>\n//                 <div className=\"item_info_userId\"><mark>name: </mark>{this.props.name}</div>\n//                 <div className=\"item_info_userId\"><mark>email: </mark>{this.props.email}</div>\n//                 <div className=\"item_info_userId\"><mark>phone: </mark>{this.props.phone}</div>\n//                 <div className=\"item_info_userId\"><mark>password: </mark>{this.props.password}</div>\n//             </div>\n//             <div className=\"user_item_buttons flex\">\n//                 <button className=\"user_item_btn\" onClick={this.openUpdateWindow}>Редактировать</button>\n//                 <button className=\"user_item_btn user_item_delete_btn\" onClick={this.deleteUser}>Удалить</button>\n//             </div>\n//         </div>;\n//     }\n// }\n\n// function getUsers() {\n//     fetch(GETusersUrl)\n//         .then(response => response.json())\n//         .then(data => {\n//             const userItems = data.map(user => (\n//                 <UserItemCreator\n//                     key={user.id}\n//                     id={user.id}\n//                     name={user.name}\n//                     email={user.email}\n//                     phone={user.phone}\n//                     password={user.password}\n//                 />\n//             ));\n\n//             usersContainer.render(\n//                 <React.StrictMode>\n//                     <div>{userItems}</div>\n//                 </React.StrictMode>\n//             );\n//         })\n//         .catch(error => {\n//             console.error('Error:', error);\n//         });\n// }\n\n// getUsers();\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Users","class","children","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["D:/Testing/Проекты/CyberT/Code/registrationform/src/frontend/src/users.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nfunction Users() {\r\n    return (\r\n        <div class=\"Users\">\r\n            <div class=\"page_events\"></div>\r\n            <div class=\"page_events2\"></div>\r\n\r\n            <div class=\"back_btn\">\r\n                <a href=\"index.html\" class=\"back_btn_link\">Назад</a>\r\n            </div>\r\n            <header class=\"header\"></header>\r\n            <main class=\"main\">\r\n                <div class=\"conteiner users_conteiner\"></div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\n// const url = 'https://jsonplaceholder.typicode.com/posts'; //testURL\r\n// const htmlBody = document.querySelector('.users_body');\r\n// const htmlContainer = document.querySelector('.users_conteiner');\r\n\r\n// const usersContainer = ReactDOM.createRoot(\r\n//     document.querySelector('.users_conteiner')\r\n// )\r\n\r\n// const pageEventsDiv = ReactDOM.createRoot(\r\n//     document.querySelector('.page_events')\r\n// )\r\n\r\n// const pageEventsDiv2 = ReactDOM.createRoot(\r\n//     document.querySelector('.page_events2')\r\n// )\r\n\r\n// class UserItemCreator extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.pageBlockerOn = this.pageBlockerOn.bind(this);\r\n//         this.pageBlockerOff = this.pageBlockerOff.bind(this);\r\n//         this.openUpdateWindow = this.openUpdateWindow.bind(this);\r\n//         this.deleteUser = this.deleteUser.bind(this);\r\n//         this.closeUpdateWindow = this.closeUpdateWindow.bind(this);\r\n//         this.confirmUpdate = this.confirmUpdate.bind(this);\r\n\r\n//         this.state = { pageBlockerState: false };\r\n//     }\r\n\r\n//     pageBlockerOn() {\r\n//         this.setState({ pageBlockerState: true })\r\n//         const pageBlock = <div className=\"page_blocker\"></div>;\r\n//         pageEventsDiv2.render(pageBlock);\r\n//     };\r\n\r\n//     pageBlockerOff() {\r\n//         this.setState({ pageBlockerState: false });\r\n//         pageEventsDiv2.render(null);\r\n\r\n//     };\r\n\r\n//     confirmUpdate() {\r\n//         user = {\r\n//             id: this.props.id,\r\n//             name: document.getElementById(\"name\").value,\r\n//             email: document.getElementById(\"email\").value,\r\n//             phone: document.getElementById(\"phone\").value,\r\n//             password: document.getElementById(\"password\").value\r\n//         }\r\n\r\n//         const requestOptions = {\r\n//             method: 'PUT',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify(user)\r\n//         }\r\n\r\n//         fetch(PUTUserUrl + this.props.id, requestOptions);\r\n\r\n//         this.closeUpdateWindow();\r\n//     }\r\n\r\n//     closeUpdateWindow() {\r\n//         this.pageBlockerOff();\r\n//         pageEventsDiv.render(null);\r\n//     };\r\n\r\n//     openUpdateWindow() {\r\n//         this.pageBlockerOn();\r\n\r\n//         const editorWindow = <div className=\"editor_window flex\">\r\n//             <a className=\"editor_window_close\" onClick={this.closeUpdateWindow} tabIndex=\"1\"><svg width=\"25px\" height=\"25px\" viewBox=\"0 0 1024 1024\"\r\n//                 xmlns=\"http://www.w3.org/2000/svg\">\r\n//                 <path\r\n//                     d=\"M195.2 195.2a64 64 0 0 1 90.496 0L512 421.504 738.304 195.2a64 64 0 0 1 90.496 90.496L602.496 512 828.8 738.304a64 64 0 0 1-90.496 90.496L512 602.496 285.696 828.8a64 64 0 0 1-90.496-90.496L421.504 512 195.2 285.696a64 64 0 0 1 0-90.496z\" />\r\n//             </svg></a>\r\n//             <h2 className=\"editor_window_title\">Редактирование</h2>\r\n//             <div className=\"editor_window_place_div\">\r\n//                 <div>\r\n//                     <span className=\"editor_window_label\">id</span>\r\n//                     <input type=\"text\" id=\"id\" value={this.props.id} className=\"form_place editor_window_place--non-active\" readOnly></input>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span className=\"editor_window_label\">name</span>\r\n//                     <input type=\"text\" id=\"name\" defaultValue={this.props.name} className=\"form_place editor_window_place\"></input>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span className=\"editor_window_label\">email</span>\r\n//                     <input type=\"text\" id=\"email\" defaultValue={this.props.email} className=\"form_place editor_window_place\"></input>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span className=\"editor_window_label\">phone</span>\r\n//                     <input type=\"text\" id=\"phone\" defaultValue={this.props.phone} className=\"form_place editor_window_place\"></input>\r\n//                 </div>\r\n//                 <div>\r\n//                     <span className=\"editor_window_label\">password</span>\r\n//                     <input type=\"text\" id=\"password\" defaultValue={this.props.password} className=\"form_place editor_window_place\"></input>\r\n//                 </div>\r\n//             </div>\r\n//             <button onClick={this.confirmUpdate} className=\"editor_window_submit\">Принять</button>\r\n//         </div>\r\n\r\n//         pageEventsDiv.render(editorWindow);\r\n\r\n//     };\r\n\r\n//     deleteUser() {\r\n//         fetch((DELETEUserUrl + this.props.id), {\r\n//             method: 'DELETE'\r\n//         });\r\n//         document.querySelector('.users_conteiner').removeChild(document.querySelector('.user_item'));\r\n//     };\r\n\r\n//     render() {\r\n//         return <div className=\"user_item flex\" userid={this.props.id}>\r\n//             <div className=\"user_item_info flex\">\r\n//                 <div className=\"item_info_userId\"><mark>id: </mark>{this.props.id}</div>\r\n//                 <div className=\"item_info_userId\"><mark>name: </mark>{this.props.name}</div>\r\n//                 <div className=\"item_info_userId\"><mark>email: </mark>{this.props.email}</div>\r\n//                 <div className=\"item_info_userId\"><mark>phone: </mark>{this.props.phone}</div>\r\n//                 <div className=\"item_info_userId\"><mark>password: </mark>{this.props.password}</div>\r\n//             </div>\r\n//             <div className=\"user_item_buttons flex\">\r\n//                 <button className=\"user_item_btn\" onClick={this.openUpdateWindow}>Редактировать</button>\r\n//                 <button className=\"user_item_btn user_item_delete_btn\" onClick={this.deleteUser}>Удалить</button>\r\n//             </div>\r\n//         </div>;\r\n//     }\r\n// }\r\n\r\n// function getUsers() {\r\n//     fetch(GETusersUrl)\r\n//         .then(response => response.json())\r\n//         .then(data => {\r\n//             const userItems = data.map(user => (\r\n//                 <UserItemCreator\r\n//                     key={user.id}\r\n//                     id={user.id}\r\n//                     name={user.name}\r\n//                     email={user.email}\r\n//                     phone={user.phone}\r\n//                     password={user.password}\r\n//                 />\r\n//             ));\r\n\r\n//             usersContainer.render(\r\n//                 <React.StrictMode>\r\n//                     <div>{userItems}</div>\r\n//                 </React.StrictMode>\r\n//             );\r\n//         })\r\n//         .catch(error => {\r\n//             console.error('Error:', error);\r\n//         });\r\n// }\r\n\r\n// getUsers();\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EACb,oBACID,OAAA;IAAKE,KAAK,EAAC,OAAO;IAAAC,QAAA,gBACdH,OAAA;MAAKE,KAAK,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC/BP,OAAA;MAAKE,KAAK,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAEhCP,OAAA;MAAKE,KAAK,EAAC,UAAU;MAAAC,QAAA,eACjBH,OAAA;QAAGQ,IAAI,EAAC,YAAY;QAACN,KAAK,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD,eACNP,OAAA;MAAQE,KAAK,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eAChCP,OAAA;MAAME,KAAK,EAAC,MAAM;MAAAC,QAAA,eACdH,OAAA;QAAKE,KAAK,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd},"metadata":{},"sourceType":"module","externalDependencies":[]}