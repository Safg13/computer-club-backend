[{"D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\index.js":"1","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\App.js":"2","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\users.js":"3","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\MAIN.js":"4","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\CreateUsersPage.jsx":"5","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\UI\\modals\\UserEditorWindow.jsx":"6","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\CreateUsersItems.jsx":"7","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\UI\\button\\UsersButton.jsx":"8"},{"size":301,"mtime":1680288087698,"results":"9","hashOfConfig":"10"},{"size":1620,"mtime":1680288087689,"results":"11","hashOfConfig":"10"},{"size":2542,"mtime":1680288087699,"results":"12","hashOfConfig":"10"},{"size":707,"mtime":1680288087689,"results":"13","hashOfConfig":"10"},{"size":2103,"mtime":1680288087690,"results":"14","hashOfConfig":"10"},{"size":4650,"mtime":1680288087692,"results":"15","hashOfConfig":"10"},{"size":1511,"mtime":1680288087690,"results":"16","hashOfConfig":"10"},{"size":460,"mtime":1680288087691,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g3cvdf",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\index.js",[],[],"D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\App.js",["45"],[],"import React from 'react';\r\nimport { root } from '.';\r\nimport Users from './users';\r\n\r\n\r\nfunction App() {\r\n  function UsersPage() {\r\n    root.render(\r\n      <Users />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"header flex\">\r\n        <div className=\"conteiner header_conteiner flex\">\r\n          <div className=\"header_mem_text\">\r\n            <h1>Logo</h1>\r\n          </div>\r\n          <div className=\"authentication flex\">\r\n            <a href=\"login.html\" className=\"home_page_link header_link flex\">\r\n              <span>Вход</span>\r\n            </a>\r\n            <a href=\"registration.html\" className=\"home_page_link header_link flex\">\r\n              <span>Регистрация</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main className=\"main\">\r\n        <div className=\"container home_page_container\">\r\n          <ul className=\"home_page_buttons_list flex\">\r\n            <li className=\"home_page_buttons_item flex\">\r\n\r\n            </li>\r\n            <li className=\"home_page_buttons_item flex\">\r\n              <a onClick={UsersPage} className=\"home_page_link flex\">\r\n                <span>Просмотр пользователей</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"home_page_buttons_item flex\">\r\n              <a href=\"aboutUs.html\" className=\"home_page_link flex\">\r\n                <span>О нас</span>\r\n              </a>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>\r\n      </main>\r\n      <footer className=\"footer\">\r\n\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\users.js",["46","47","48","49","50","51"],[],"import { useState } from \"react\";\r\nimport { root } from '.';\r\nimport { useEffect } from \"react\";\r\nimport CreateUsersPage from \"./components/CreateUsersPage\";\r\nimport UserEditorWindow from \"./components/UI/modals/UserEditorWindow.jsx\";\r\nimport { TEST_URL } from './MAIN.js';\r\nimport { GET_USERS_URL } from './MAIN.js';\r\nimport { DELETE_USERS_URL } from './MAIN.js';\r\n\r\nfunction Users() {\r\n    const [errors, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [GettedUsers, setGettedUsers] = useState([]);\r\n\r\n    const [userItems, setUserItems] = useState([])\r\n    const [editorWindowActive, setEditorWindowActive] = useState(false)\r\n    const [currentItem, setCurrentItem] = useState({})\r\n\r\n    const [id, setId] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const currentItemParameters = {\r\n        id: id,\r\n        name: name,\r\n        email: email,\r\n        phone: phone,\r\n        password: password,\r\n        setId: setId,\r\n        setName: setName,\r\n        setEmail: setEmail,\r\n        setPhone: setPhone,\r\n        setPassword: setPassword,\r\n    };\r\n\r\n    const GetUsers = () => {\r\n\r\n        fetch(GET_USERS_URL)\r\n            .then(response => response.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setUserItems(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                    console.log(errors);\r\n                    console.log(isLoaded);\r\n                }\r\n            )\r\n\r\n    };\r\n    useEffect((GetUsers), []);\r\n\r\n    const deleteUser = (item) => {\r\n        fetch((DELETE_USERS_URL + item.id), {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        setUserItems(userItems.filter(i => i.id !== item.id))\r\n    };\r\n\r\n    const editUser = (item) => {\r\n        setEditorWindowActive(true);\r\n        setCurrentItem(item);\r\n    };\r\n\r\n    return (\r\n        <CreateUsersPage\r\n            editUser={editUser}\r\n            deleteUser={deleteUser}\r\n            userItems={userItems}\r\n            editorWindowActive={editorWindowActive}\r\n            setEditorWindowActive={setEditorWindowActive}\r\n            currentItem={currentItem}\r\n            GetUsers={GetUsers}\r\n            currentItemParameters={currentItemParameters}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Users;","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\MAIN.js",[],[],"D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\CreateUsersPage.jsx",[],[],"D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\UI\\modals\\UserEditorWindow.jsx",["52","53","54"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport classes from './UserEditorWindow.module.css'\r\nimport { PUT_USERS_URL } from '../../../MAIN'\r\nimport { useEffect } from 'react'\r\n\r\nconst UserEditorWindow = ({ currentItemParameters, active, setActive, currentItem, GetUsers }) => {\r\n\r\n    const confirmUpdate = async () => {\r\n\r\n        const user = {\r\n            id: currentItemParameters.id,\r\n            name: currentItemParameters.name,\r\n            email: currentItemParameters.email,\r\n            phone: currentItemParameters.phone,\r\n            password: currentItemParameters.password\r\n        }\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(user)\r\n        }\r\n\r\n        if (JSON.stringify(currentItem) !== JSON.stringify(user)) {\r\n            console.log('не равны');\r\n\r\n            await fetch(PUT_USERS_URL + currentItem.id, requestOptions);\r\n            GetUsers();\r\n            setActive(false);\r\n\r\n        } else {\r\n            console.log('равны');\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\r\n            active ? ([classes.editor_window, classes.editor_window_active].join(' ')) : (classes.editor_window)\r\n        }>\r\n            <div className={classes.editor_window_content}>\r\n                <a className=\"editor_window_close\" tabIndex=\"1\" onClick={() => setActive(false)}>\r\n                    <svg width=\"25px\" height=\"25px\" viewBox=\"0 0 1024 1024\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M195.2 195.2a64 64 0 0 1 90.496 0L512 421.504 738.304 195.2a64 64 0 0 1 90.496 90.496L602.496 512 828.8 738.304a64 64 0 0 1-90.496 90.496L512 602.496 285.696 828.8a64 64 0 0 1-90.496-90.496L421.504 512 195.2 285.696a64 64 0 0 1 0-90.496z\" />\r\n                    </svg></a>\r\n                <h2 className=\"editor_window_title\">Редактирование</h2>\r\n                <div className=\"editor_window_place_div\">\r\n                    <div>\r\n                        <span className=\"editor_window_label\">id</span>\r\n                        <input type=\"text\" id=\"id\" value={currentItemParameters.id} className=\"form_place editor_window_place--non-active\" readOnly></input>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"editor_window_label\">name</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            value={currentItemParameters.name}\r\n                            onChange={e => currentItemParameters.setName(e.target.value)}\r\n                            className=\"form_place editor_window_place\"\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"editor_window_label\">email</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"email\"\r\n                            value={currentItemParameters.email}\r\n                            onChange={e => currentItemParameters.setEmail(e.target.value)}\r\n                            className=\"form_place editor_window_place\"\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"editor_window_label\">phone</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"phone\"\r\n                            value={currentItemParameters.phone}\r\n                            onChange={e => currentItemParameters.setPhone(e.target.value)}\r\n                            className=\"form_place editor_window_place\"\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"editor_window_label\">password</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"password\"\r\n                            value={currentItemParameters.password}\r\n                            onChange={e => currentItemParameters.setPassword(e.target.value)}\r\n                            className=\"form_place editor_window_place\"\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n                <button onClick={confirmUpdate} className=\"editor_window_submit\">Принять</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default UserEditorWindow;\r\n\r\n","D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\CreateUsersItems.jsx",[],[],"D:\\Testing\\Проекты\\CyberT\\Code\\registrationform\\src\\main\\resources\\src\\components\\UI\\button\\UsersButton.jsx",[],[],{"ruleId":"55","severity":1,"message":"56","line":37,"column":15,"nodeType":"57","endLine":37,"endColumn":70},{"ruleId":"58","severity":1,"message":"59","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":24},{"ruleId":"58","severity":1,"message":"63","line":6,"column":10,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"64","line":13,"column":12,"nodeType":"60","messageId":"61","endLine":13,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":13,"column":25,"nodeType":"60","messageId":"61","endLine":13,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":55,"column":27,"nodeType":"68","endLine":55,"endColumn":29,"suggestions":"69"},{"ruleId":"58","severity":1,"message":"70","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"58","severity":1,"message":"71","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":43,"column":17,"nodeType":"57","endLine":43,"endColumn":98},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'root' is defined but never used.","Identifier","unusedVar","'UserEditorWindow' is defined but never used.","'TEST_URL' is defined but never used.","'GettedUsers' is assigned a value but never used.","'setGettedUsers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'errors' and 'isLoaded'. Either include them or remove the dependency array.","ArrayExpression",["72"],"'useState' is defined but never used.","'useEffect' is defined but never used.",{"desc":"73","fix":"74"},"Update the dependencies array to be: [errors, isLoaded]",{"range":"75","text":"76"},[1785,1787],"[errors, isLoaded]"]